name: PR Check

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  pr-title:
    runs-on: ubuntu-latest
    steps:
    - name: Check PR title
      uses: amannn/action-semantic-pull-request@v5
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        types: |
          feat
          fix
          docs
          style
          refactor
          perf
          test
          build
          ci
          chore
          revert

  size-check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Check bundle size
      uses: actions/setup-node@v3
      with:
        node-version: 18.x
        cache: 'npm'
    
    - run: npm ci
    - run: npm run build
    
    - name: Check package size
      run: |
        SIZE=$(du -sb dist | cut -f1)
        echo "Bundle size: $SIZE bytes"
        if [ $SIZE -gt 10000000 ]; then
          echo "⚠️ Warning: Bundle size exceeds 10MB"
          exit 1
        fi

  code-quality:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js 18.x
      uses: actions/setup-node@v3
      with:
        node-version: 18.x
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run linting
      run: npm run lint
      continue-on-error: true
    
    - name: Run type checking
      run: npm run typecheck
    
    - name: Check for console logs
      run: |
        if grep -r "console.log" src/ --exclude-dir=__tests__ --exclude-dir=node_modules; then
          echo "⚠️ Warning: console.log statements found in source code"
        fi

  test-coverage:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js 18.x
      uses: actions/setup-node@v3
      with:
        node-version: 18.x
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run tests with coverage
      run: npm run test:coverage
      continue-on-error: true
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/coverage-final.json
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false