# 実装ガイダンス

特定のタスクまたはコンポーネントの詳細な実装ガイダンスを提供したいと思います。Test-Driven Development (TDD) アプローチに従って実装を支援してください。

## タスク情報
- **機能名**: {{FEATURE_NAME}}
- **プロジェクト名**: {{PROJECT_NAME}}
- **現在のタスク**: {{CURRENT_TASK}}
- **タスクID**: {{TASK_ID}}

## タスク詳細
{{TASK_DESCRIPTION}}

## 受入基準
{{#if ACCEPTANCE_CRITERIA}}
{{ACCEPTANCE_CRITERIA}}
{{else}}
受入基準が指定されていません。タスクの説明に基づいて適切な基準を含めてください。
{{/if}}

## コンテキスト情報
- **実装フェーズ**: {{IMPLEMENTATION_PHASE}}
- **タスク依存関係**: {{TASK_DEPENDENCIES}}
- **技術スタック**: {{TECHNOLOGY_STACK}}
- **アーキテクチャタイプ**: {{ARCHITECTURE_TYPE}}
- **コードスタイル**: {{CODE_STYLE}}
- **テストフレームワーク**: {{TESTING_FRAMEWORK}}

## プロジェクトファイル参照
{{#if SPEC_PATH}}
- **仕様**: `{{SPEC_PATH}}`
{{/if}}
{{#if DESIGN_PATH}}
- **設計**: `{{DESIGN_PATH}}`
{{/if}}
{{#if TASKS_PATH}}
- **タスク**: `{{TASKS_PATH}}`
{{/if}}

## 現在の進捗
{{#if CURRENT_PROGRESS}}
{{CURRENT_PROGRESS}}
{{/if}}

## 特定の実装対象
{{#if SPECIFIC_COMPONENT}}
**対象コンポーネント**: {{SPECIFIC_COMPONENT}}
**コンポーネント要件**: {{COMPONENT_REQUIREMENTS}}
{{/if}}

## 実装課題
{{#if IMPLEMENTATION_CHALLENGES}}
**特定された課題**: {{IMPLEMENTATION_CHALLENGES}}
{{/if}}

## 既存コード
{{#if EXISTING_CODE}}
**関連する既存コード** ({{CODE_LANGUAGE}}):
```{{CODE_LANGUAGE}}
{{EXISTING_CODE}}
```
{{/if}}

## 依頼内容

TDDアプローチを使用した段階的な実装ガイダンスを提供してください：

### 1. TDD実装アプローチ
- **Red**: 失敗するテストを最初に作成
- **Green**: テストを通すための最小限のコード実装
- **Refactor**: コードを改善し、テストが通ることを確認

### 2. 実装ステップ
- 詳細なステップバイステップガイド
- 各ステップのコード例
- テストケースとテストデータ
- エラーハンドリング戦略

### 3. 品質保証
- コードレビューチェックリスト
- パフォーマンス考慮事項
- セキュリティベストプラクティス
- ドキュメント要件

## 期待する出力形式

実装ガイドを以下のように構造化してください：
```markdown
# 実装: [タスク名]

## 実装概要
[実装アプローチの要約]

## テスト戦略
### テストケース1: [テストシナリオ]
```[言語]
// テストコード例
```

### テストケース2: [テストシナリオ]
```[言語]
// テストコード例
```

## 実装ステップ

### ステップ1: [ステップ名] (Red)
**目標**: [何を達成するか]
**テスト**: [失敗するテストを作成]
```[言語]
// テストコード
```

### ステップ2: [ステップ名] (Green)
**実装**: [テストを通すための最小限の実装]
```[言語]
// 実装コード
```

### ステップ3: [ステップ名] (Refactor)
**改善**: [コードの改善]
```[言語]
// リファクタリングされたコード
```

## エラーハンドリング
[エラーケースとその処理]

## パフォーマンス考慮事項
[パフォーマンス最適化のポイント]

## セキュリティ考慮事項
[セキュリティ上の注意点]

## 完了基準
- [ ] すべてのテストが通過
- [ ] コード品質基準を満たす
- [ ] ドキュメントが更新済み
- [ ] セキュリティレビュー完了
```

実装完了後、`/kiro:spec-status {{FEATURE_NAME}}`を使用して進捗を更新してください。

---

*このプロンプトはKiroスタイルSpec-Driven Developmentワークフローの一部です。*