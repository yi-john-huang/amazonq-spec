# 建立功能設計文件

我需要為已有核准需求的功能建立詳細的設計文件。請協助我設計技術實作方法。

## 功能資訊
- **功能名稱**: {{FEATURE_NAME}}
- **專案名稱**: {{PROJECT_NAME}}
- **規格路徑**: {{SPEC_PATH}}
- **需求路徑**: {{REQUIREMENTS_PATH}}

## 前提條件檢查
{{#if REQUIREMENTS_APPROVED}}
✅ 需求已經過審核和核准。
{{else}}
⚠️  **重要**: 請在進行設計之前確認您已審核並核准需求文件。

**您是否已審核並核准需求文件？** [y/N]

如果尚未審核，請檢視 `{{REQUIREMENTS_PATH}}` 並確保所有需求都正確，然後再繼續。
{{/if}}

## 需求摘要
{{REQUIREMENTS_SUMMARY}}

## 專案內容
- **架構**: {{ARCHITECTURE_TYPE}}
- **技術堆疊**: {{TECHNOLOGY_STACK}}
- **現有程式庫**: {{CODEBASE_STRUCTURE}}
- **整合點**: {{INTEGRATION_POINTS}}

## 設計約束
{{#if DESIGN_CONSTRAINTS}}
{{DESIGN_CONSTRAINTS}}
{{else}}
- 遵循現有專案架構模式
- 維持與目前程式庫風格的一致性
- 確保向後相容性
- 優化維護性和可測試性
{{/if}}

## 請求

請建立解決以下問題的全面設計文件：

### 1. 架構設計
- 高階元件架構
- 資料流程圖
- 整合模式
- 關注點分離

### 2. 資料設計
- 資料模型和架構
- 資料關係和流程
- 持久化策略
- 資料驗證規則

### 3. API 設計
- 端點規格
- 請求/回應格式
- 驗證和授權
- 錯誤處理

### 4. 使用者介面設計
- UI/UX 線框圖
- 使用者旅程
- 互動模式
- 響應式設計考量

### 5. 安全性設計
- 驗證和授權策略
- 資料保護
- 安全性最佳實務
- 漏洞對策

### 6. 效能設計
- 快取策略
- 優化方法
- 可擴展性考量
- 監控策略

## 預期輸出格式

請將設計文件結構化如下：
```markdown
# 設計: [功能名稱]

## 概述
[設計方法摘要]

## 架構概述
[系統架構的高階圖]

## 元件設計
### 元件1
**責任**: [此元件的功能]
**介面**: [如何與其他元件互動]
**實作**: [實作詳細資訊]

## 資料設計
[資料庫架構、模型、關係]

## API 規格
[REST 端點、GraphQL 架構等]

## 安全性實作
[安全措施詳細資訊]

## 效能優化
[效能策略]

## 測試策略
[測試方法和範圍]

## 實作階段
[分階段實作計劃]
```

設計完成後，下一步將使用 `/kiro:spec-tasks {{FEATURE_NAME}}` 進行任務分解。

---

*此提示是 Kiro 風格規格驅動開發工作流程的一部分。*