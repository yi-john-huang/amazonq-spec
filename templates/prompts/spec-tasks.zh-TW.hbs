# 產生任務分解

我想要基於核准的設計建立具體、可執行的實作任務的詳細分解。

## 功能資訊
- **功能名稱**: {{FEATURE_NAME}}
- **專案名稱**: {{PROJECT_NAME}}
- **規格路徑**: {{SPEC_PATH}}
- **設計路徑**: {{DESIGN_PATH}}

## 前提條件檢查
{{#if DESIGN_APPROVED}}
✅ 需求和設計都已經過審核和核准。
{{else}}
⚠️  **重要**: 請在進行任務分解之前確認您已審核並核准需求和設計。

**您是否已審核並核准需求和設計？** [y/N]

如果尚未審核，請檢視以下內容後再繼續：
- 需求文件: `{{REQUIREMENTS_PATH}}`
- 設計文件: `{{DESIGN_PATH}}`
{{/if}}

## 設計摘要
{{DESIGN_SUMMARY}}

## 開發內容
- **開發環境**: {{DEV_ENVIRONMENT}}
- **團隊規模**: {{TEAM_SIZE}}
- **時程**: {{TIMELINE}}
- **複雜度等級**: {{COMPLEXITY_LEVEL}}

## 請求

請將核准的設計分解為可執行的開發任務：

### 1. 實作階段
每個階段的邏輯分組：
- **階段1**: 基礎和核心功能
- **階段2**: 業務邏輯和整合
- **階段3**: UI/UX 實作
- **階段4**: 測試和驗證
- **階段5**: 完成和優化

### 2. 任務分解
每個任務包含：
- 清楚的任務描述
- 接受標準
- 估計工作量
- 前提條件和相依性
- 交付成果
- 完成定義

### 3. 風險評估
- 識別高風險任務
- 技術挑戰
- 減緩策略

## 預期輸出格式

請將任務文件結構化如下：
```markdown
# 任務: [功能名稱]

## 實作概述
[實作方法摘要]

## 階段1: 基礎設定
### TASK-001: [任務標題]
**描述**: [任務的詳細描述]
**估計工作量**: [小時/天數]
**優先級**: 高/中/低
**相依性**: [前提任務]
**接受標準**:
- [ ] 標準1
- [ ] 標準2
**交付成果**: [將建立的交付成果]
**完成定義**:
- [ ] 程式碼完成
- [ ] 測試通過
- [ ] 審核完成

## 階段2: [階段名稱]
[以相同格式繼續階段2的任務]

## 風險和里程碑
### 高風險任務
- [風險描述和減緩措施]

### 關鍵里程碑
- [重要的完成點]

## 測試策略
- [測試方法]
- [測試覆蓋需求]
```

請確保每個任務都：
- **可執行**: 可在1-3天內完成
- **獨立**: 可獨立於其他任務工作
- **可測試**: 有明確的成功標準
- **可追溯**: 可追溯到需求和設計

任務分解完成後，可以使用 `/kiro:spec-impl {{FEATURE_NAME}}` 開始實作。

---

*此提示是 Kiro 風格規格驅動開發工作流程的一部分。*