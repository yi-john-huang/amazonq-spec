# プロジェクトステアリング文書の作成

AI開発ガイダンスのためのプロジェクト全体のステアリング文書を作成または更新したいと思います。

## プロジェクト情報
- **プロジェクト名**: {{PROJECT_NAME}}
- **プロジェクトパス**: {{PROJECT_PATH}}
- **ステアリングディレクトリ**: {{STEERING_DIRECTORY}}

## プロジェクトコンテキスト
- **技術スタック**: {{TECHNOLOGY_STACK}}
- **アーキテクチャタイプ**: {{ARCHITECTURE_TYPE}}
- **チームサイズ**: {{TEAM_SIZE}}
- **開発段階**: {{DEVELOPMENT_STAGE}}

## 現在のプロジェクト状況
{{#if CODEBASE_SUMMARY}}
**コードベース要約**: {{CODEBASE_SUMMARY}}
{{/if}}

{{#if CODE_PATTERNS}}
**コードパターン**: {{CODE_PATTERNS}}
{{/if}}

{{#if EXISTING_ARCHITECTURE}}
**既存アーキテクチャ**: {{EXISTING_ARCHITECTURE}}
{{/if}}

## プロジェクトの課題
{{#if PROJECT_CHALLENGES}}
{{PROJECT_CHALLENGES}}
{{else}}
プロジェクト固有の課題が特定されていません。コードベースを分析して潜在的な課題を特定してください。
{{/if}}

## 品質要件
{{#if QUALITY_REQUIREMENTS}}
{{QUALITY_REQUIREMENTS}}
{{else}}
- コード品質と保守性の維持
- テストカバレッジの確保
- セキュリティベストプラクティスの遵守
- パフォーマンス最適化
{{/if}}

## チームワークフロー
{{#if TEAM_WORKFLOW}}
{{TEAM_WORKFLOW}}
{{else}}
標準的なアジャイル開発プロセスを想定してください。
{{/if}}

## 既存ステアリング
{{#if EXISTING_STEERING}}
**現在のステアリング文書**: {{EXISTING_STEERING}}
既存の文書を基に更新を行ってください。
{{/if}}

## 依頼内容

以下のコアステアリング文書を作成してください：

### 1. product.md - 製品コンテキスト
- ビジネス目標と製品ビジョン
- ターゲットユーザーとユースケース
- 主要機能と価値提案
- 市場ポジションと競合優位性

### 2. tech.md - 技術標準
- 技術スタックとフレームワーク選択理由
- アーキテクチャ原則と設計パターン
- コーディング標準とベストプラクティス
- 開発ツールと環境設定
- セキュリティとパフォーマンスガイドライン

### 3. structure.md - プロジェクト構成
- ディレクトリ構造と組織
- ファイル命名規則
- モジュール分割とレイヤリング
- 依存関係管理
- ビルドとデプロイメント構成

## 期待する出力形式

3つの独立したMarkdownファイルとして構造化してください：

### product.md
```markdown
# 製品コンテキスト: [プロジェクト名]

## 製品ビジョン
[製品が目指すもの]

## ビジネス目標
- [目標1]
- [目標2]

## ターゲットユーザー
### プライマリユーザー
- [ユーザー詳細]

### セカンダリユーザー
- [ユーザー詳細]

## 主要機能
1. **[機能名]**: [説明と価値]
2. **[機能名]**: [説明と価値]

## 成功指標
- [KPI1]
- [KPI2]
```

### tech.md
```markdown
# 技術標準: [プロジェクト名]

## 技術スタック
### フロントエンド
- [技術とバージョン] - [選択理由]

### バックエンド
- [技術とバージョン] - [選択理由]

### データベース
- [技術とバージョン] - [選択理由]

## アーキテクチャ原則
1. **[原則名]**: [説明]
2. **[原則名]**: [説明]

## コーディング標準
### [言語名]
- [標準1]
- [標準2]

## セキュリティ要件
- [セキュリティ要件1]
- [セキュリティ要件2]

## パフォーマンス目標
- [目標1]
- [目標2]
```

### structure.md
```markdown
# プロジェクト構成: [プロジェクト名]

## ディレクトリ構造
```
[プロジェクトルート]/
├── [ディレクトリ1]/     # [目的]
├── [ディレクトリ2]/     # [目的]
└── [ディレクトリ3]/     # [目的]
```

## ファイル命名規則
### [ファイルタイプ]
- パターン: [命名パターン]
- 例: [具体例]

## モジュール組織
### [レイヤー名]
**役割**: [役割説明]
**場所**: [ディレクトリパス]
**規則**: [従うべき規則]

## 依存関係原則
1. **[原則名]**: [説明]
2. **[原則名]**: [説明]
```

これらのステアリング文書は、AIアシスタントがプロジェクトのコンテキストを理解し、一貫した開発ガイダンスを提供するために使用されます。

---

*このプロンプトはKiroスタイルSpec-Driven Developmentワークフローの一部です。*