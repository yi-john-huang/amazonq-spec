# 實作指導

我想要為特定任務或元件提供詳細的實作指導。請按照測試驅動開發 (TDD) 方法協助實作。

## 任務資訊
- **功能名稱**: {{FEATURE_NAME}}
- **專案名稱**: {{PROJECT_NAME}}
- **目前任務**: {{CURRENT_TASK}}
- **任務 ID**: {{TASK_ID}}

## 任務詳細資訊
{{TASK_DESCRIPTION}}

## 接受標準
{{#if ACCEPTANCE_CRITERIA}}
{{ACCEPTANCE_CRITERIA}}
{{else}}
未指定接受標準。請根據任務描述包含適當的標準。
{{/if}}

## 內容資訊
- **實作階段**: {{IMPLEMENTATION_PHASE}}
- **任務相依性**: {{TASK_DEPENDENCIES}}
- **技術堆疊**: {{TECHNOLOGY_STACK}}
- **架構類型**: {{ARCHITECTURE_TYPE}}
- **程式碼風格**: {{CODE_STYLE}}
- **測試框架**: {{TESTING_FRAMEWORK}}

## 專案檔案參考
{{#if SPEC_PATH}}
- **規格**: `{{SPEC_PATH}}`
{{/if}}
{{#if DESIGN_PATH}}
- **設計**: `{{DESIGN_PATH}}`
{{/if}}
{{#if TASKS_PATH}}
- **任務**: `{{TASKS_PATH}}`
{{/if}}

## 目前進度
{{#if CURRENT_PROGRESS}}
{{CURRENT_PROGRESS}}
{{/if}}

## 特定實作目標
{{#if SPECIFIC_COMPONENT}}
**目標元件**: {{SPECIFIC_COMPONENT}}
**元件需求**: {{COMPONENT_REQUIREMENTS}}
{{/if}}

## 實作挑戰
{{#if IMPLEMENTATION_CHALLENGES}}
**識別的挑戰**: {{IMPLEMENTATION_CHALLENGES}}
{{/if}}

## 現有程式碼
{{#if EXISTING_CODE}}
**相關現有程式碼** ({{CODE_LANGUAGE}}):
```{{CODE_LANGUAGE}}
{{EXISTING_CODE}}
```
{{/if}}

## 請求

請使用 TDD 方法提供逐步實作指導：

### 1. TDD 實作方法
- **紅燈**: 先建立失敗的測試
- **綠燈**: 實作使測試通過的最小程式碼
- **重構**: 改進程式碼並確認測試仍然通過

### 2. 實作步驟
- 詳細的逐步指南
- 每個步驟的程式碼範例
- 測試案例和測試資料
- 錯誤處理策略

### 3. 品質保證
- 程式碼審核檢查清單
- 效能考量
- 安全性最佳實務
- 文件需求

## 預期輸出格式

請將實作指南結構化如下：
```markdown
# 實作: [任務名稱]

## 實作概述
[實作方法摘要]

## 測試策略
### 測試案例1: [測試情境]
```[語言]
// 測試程式碼範例
```

### 測試案例2: [測試情境]
```[語言]
// 測試程式碼範例
```

## 實作步驟

### 步驟1: [步驟名稱] (紅燈)
**目標**: [要達成的目標]
**測試**: [建立失敗的測試]
```[語言]
// 測試程式碼
```

### 步驟2: [步驟名稱] (綠燈)
**實作**: [使測試通過的最小實作]
```[語言]
// 實作程式碼
```

### 步驟3: [步驟名稱] (重構)
**改進**: [程式碼改進]
```[語言]
// 重構的程式碼
```

## 錯誤處理
[錯誤情況及其處理]

## 效能考量
[效能優化重點]

## 安全性考量
[安全性注意事項]

## 完成標準
- [ ] 所有測試通過
- [ ] 符合程式碼品質標準
- [ ] 文件已更新
- [ ] 安全性審核完成
```

實作完成後，請使用 `/kiro:spec-status {{FEATURE_NAME}}` 更新進度。

---

*此提示是 Kiro 風格規格驅動開發工作流程的一部分。*